---
- name: Copiar, tornar executável e executar script enable_hubble_helm_cilium.sh no host labs
  hosts: labs
  become: true
  vars:
    local_script_path: "../helm_installs/enable_hubble_helm_cilium.sh"
    remote_script_path: "/home/{{ ansible_user }}/enable_hubble_helm_cilium.sh"
    kubeconfig_path: "/home/{{ ansible_user }}/.kube/config"
    release_name: "cilium"

  tasks:
    - name: Verificar se o arquivo KUBECONFIG existe no host remoto
      stat:
        path: "{{ kubeconfig_path }}"
      register: kubeconfig_status

    - name: Falhar se KUBECONFIG não existir
      fail:
        msg: "❌ Arquivo KUBECONFIG '{{ kubeconfig_path }}' não encontrado. Configure corretamente antes de executar este playbook."
      when: not kubeconfig_status.stat.exists

    - name: Copiar o script enable_hubble_helm_cilium.sh para o host remoto
      copy:
        src: "{{ local_script_path }}"
        dest: "{{ remote_script_path }}"
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Verificar se o script foi copiado com sucesso
      stat:
        path: "{{ remote_script_path }}"
      register: script_status

    - name: Falhar se o script não foi copiado corretamente
      fail:
        msg: "❌ Script '{{ remote_script_path }}' não encontrado após cópia."
      when: not script_status.stat.exists

    - name: Garantir permissões corretas no script remoto
      file:
        path: "{{ remote_script_path }}"
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Executar o script enable_hubble_helm_cilium.sh no host remoto com ambiente KUBECONFIG e RELEASE como usuário normal
      shell: "/bin/bash {{ remote_script_path }}"
      args:
        chdir: "/home/{{ ansible_user }}"
      become: false
      become_user: "{{ ansible_user }}"
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
        RELEASE: "{{ release_name }}"
      register: enable_hubble_script_output
      failed_when: enable_hubble_script_output.rc != 0

    - name: Exibir saída do script enable_hubble_helm_cilium.sh
      debug:
        var: enable_hubble_script_output.stdout_lines

    - name: Exibir erro do script se houver
      debug:
        var: enable_hubble_script_output.stderr_lines
      when: enable_hubble_script_output.rc != 0

    - name: Copiar binário hubble para /usr/local/bin com sudo (se existir em /tmp)
      become: true
      copy:
        src: /tmp/hubble
        dest: /usr/local/bin/hubble
        remote_src: yes
        mode: '0755'
      when: enable_hubble_script_output.rc == 0

    - name: Verificar versão da Hubble CLI instalada
      command: hubble version
      register: hubble_version
      ignore_errors: true

    - name: Mostrar versão instalada da Hubble CLI
      debug:
        var: hubble_version.stdout
      when: hubble_version.rc == 0
